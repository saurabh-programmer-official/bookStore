spring.application.name=PlaceOrderMS
server.port=6002

eureka.client.service-url.defaultZone=http://localhost:8761/eureka
eureka.client.healthcheck.enabled=true

#RabbitMQ
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest


#database
spring.datasource.url=jdbc:mysql://localhost:3306/jlcorderdb
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.username=root
spring.datasource.password=saurabh01

spring.boot.admin.client.url=http://localhost:5556
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.maximum-pool-size=10

logging.level.root=INFO
logging.file.name=C:/mylogs/jlc-place-order.log
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update

#actuator related properties
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

#actuator related properties
#INFO Endpoint Configuration
info.app.name=PlaceOrderMS
info.app.description=RabbitMQ implemented.Actuator added.This PlaceOrder Microservice is developed by Saurabh Bhandari and it explains placeorder mechanism
info.app.version=1.2
info.app.encoding=UTF-8
info.app.java.version=19.0.1
info.app.developer=Saurabh BHandari
info.app.company=FABELLUS Salon and Spa